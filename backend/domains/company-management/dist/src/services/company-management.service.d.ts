import { CreateCompanyDto, UpdateCompanyDto, CreateBranchDto, UpdateBranchDto } from '../dto/company-management.dto';
export declare class CompanyManagementService {
    createCompany(createCompanyDto: CreateCompanyDto): Promise<{
        id: string;
        name: string;
        description: string;
        website: string;
        email: string;
        phone: string;
        address: string;
        logoUrl: string;
        primaryColor: string;
        secondaryColor: string;
        accentColor: string;
        gstNumber: string;
        fssaiLicense: string;
        panNumber: string;
        cinNumber: string;
        msmeRegistration: string;
        tradeLicense: string;
        establishmentYear: number;
        businessCategory: string;
        complianceDetails: unknown;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
    getAllCompanies(): Promise<{
        id: string;
        name: string;
        description: string;
        website: string;
        email: string;
        phone: string;
        address: string;
        logoUrl: string;
        primaryColor: string;
        secondaryColor: string;
        accentColor: string;
        gstNumber: string;
        fssaiLicense: string;
        panNumber: string;
        cinNumber: string;
        msmeRegistration: string;
        tradeLicense: string;
        establishmentYear: number;
        businessCategory: string;
        complianceDetails: unknown;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    getCompanyById(id: string): Promise<{
        id: string;
        name: string;
        description: string;
        website: string;
        email: string;
        phone: string;
        address: string;
        logoUrl: string;
        primaryColor: string;
        secondaryColor: string;
        accentColor: string;
        gstNumber: string;
        fssaiLicense: string;
        panNumber: string;
        cinNumber: string;
        msmeRegistration: string;
        tradeLicense: string;
        establishmentYear: number;
        businessCategory: string;
        complianceDetails: unknown;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
    updateCompany(id: string, updateCompanyDto: UpdateCompanyDto): Promise<{
        id: string;
        name: string;
        description: string;
        website: string;
        email: string;
        phone: string;
        address: string;
        logoUrl: string;
        primaryColor: string;
        secondaryColor: string;
        accentColor: string;
        gstNumber: string;
        fssaiLicense: string;
        panNumber: string;
        cinNumber: string;
        msmeRegistration: string;
        tradeLicense: string;
        establishmentYear: number;
        businessCategory: string;
        complianceDetails: unknown;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
    deleteCompany(id: string): Promise<{
        message: string;
    }>;
    createBranch(createBranchDto: CreateBranchDto): Promise<{
        id: string;
        name: string;
        email: string;
        phone: string;
        address: string;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
        companyId: string;
        latitude: string;
        longitude: string;
        language: string;
        whatsappNumber: string;
        managerName: string;
        operatingHours: unknown;
    }>;
    getAllBranches(): Promise<{
        id: string;
        companyId: string;
        name: string;
        address: string;
        latitude: string;
        longitude: string;
        language: string;
        phone: string;
        whatsappNumber: string;
        email: string;
        managerName: string;
        operatingHours: unknown;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    getBranchesByCompany(companyId: string): Promise<{
        id: string;
        companyId: string;
        name: string;
        address: string;
        latitude: string;
        longitude: string;
        language: string;
        phone: string;
        whatsappNumber: string;
        email: string;
        managerName: string;
        operatingHours: unknown;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    getBranchById(id: string): Promise<{
        id: string;
        companyId: string;
        name: string;
        address: string;
        latitude: string;
        longitude: string;
        language: string;
        phone: string;
        whatsappNumber: string;
        email: string;
        managerName: string;
        operatingHours: unknown;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
    updateBranch(id: string, updateBranchDto: UpdateBranchDto): Promise<{
        id: string;
        companyId: string;
        name: string;
        address: string;
        latitude: string;
        longitude: string;
        language: string;
        phone: string;
        whatsappNumber: string;
        email: string;
        managerName: string;
        operatingHours: unknown;
        isActive: boolean;
        createdAt: Date;
        updatedAt: Date;
    }>;
    deleteBranch(id: string): Promise<{
        message: string;
    }>;
    getCompanyHierarchy(companyId: string): Promise<{
        company: {
            id: string;
            name: string;
            description: string;
            website: string;
            email: string;
            phone: string;
            address: string;
            logoUrl: string;
            primaryColor: string;
            secondaryColor: string;
            accentColor: string;
            gstNumber: string;
            fssaiLicense: string;
            panNumber: string;
            cinNumber: string;
            msmeRegistration: string;
            tradeLicense: string;
            establishmentYear: number;
            businessCategory: string;
            complianceDetails: unknown;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
        };
        branches: {
            id: string;
            companyId: string;
            name: string;
            address: string;
            latitude: string;
            longitude: string;
            language: string;
            phone: string;
            whatsappNumber: string;
            email: string;
            managerName: string;
            operatingHours: unknown;
            isActive: boolean;
            createdAt: Date;
            updatedAt: Date;
        }[];
        totalBranches: number;
    }>;
}
